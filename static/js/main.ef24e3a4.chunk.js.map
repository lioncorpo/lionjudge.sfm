{"version":3,"sources":["assets/mapillary-logo.svg","components/Header.js","components/ButtonLink.js","components/Hero.js","components/Attribution.js","components/Terms.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","href","rel","src","require","alt","ButtonLink","props","children","rest","Object","objectWithoutProperties","assign","THREE","window","Potree","CameraControls","Hero","mount","useRef","useEffect","pointMat","width","current","clientWidth","height","clientHeight","aspect","clock","Clock","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","alpha","precision","premultipliedAlpha","preserveDrawingBuffer","powerPreference","setPixelRatio","devicePixelRatio","setSize","controls","document","querySelector","dampingFactor","minPolarAngle","Math","PI","maxPolarAngle","minDistance","maxDistance","setLookAt","rotate","prevTheta","panDirection","addEventListener","e","nextTheta","target","_spherical","theta","points","Group","setPointBudget","add","Global","workerPath","loadPointCloud","data","material","pointcloud","size","pointSizeType","PointSizeType","ADAPTIVE","shape","PointShape","SQUARE","position","copy","Vector3","handleResize","updateProjectionMatrix","appendChild","domElement","animate","dt","getDelta","update","render","time","requestAnimationFrame","removeEventListener","ref","install","Attribution","Terms","App","_onLoad","asyncToGenerator","regenerator_default","mark","_callee","font","wrap","_context","prev","next","FontFaceObserver","load","style","opacity","stop","apply","this","arguments","onLoad","react","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mLCEzB,SAASC,IACtB,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,8CAAR,cACAJ,EAAAC,EAAAC,cAAA,KAAGE,KAAK,iCAAR,iBACAJ,EAAAC,EAAAC,cAAA,KAAGE,KAAK,wCACNJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADf,gBAKFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,eACe,IACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,4BAA4BC,IAAI,qBACtCL,EAAAC,EAAAC,cAAA,OACEI,IAAKC,EAAQ,IACbC,IAAI,6BCjBH,SAASC,EAAWC,GAAO,IAChCC,EAAuCD,EAAvCC,SAAUP,EAA6BM,EAA7BN,KAAMD,EAAuBO,EAAvBP,UAAcS,EADEC,OAAAC,EAAA,EAAAD,CACOH,EADP,iCAExC,OACEV,EAAAC,EAAAC,cAAA,IAAAW,OAAAE,OAAA,CAAGX,KAAMA,GAAUQ,EAAnB,CAAyBT,UAAWA,EAAY,YAC7CQ,GCFP,IAAMK,EAAQC,OAAOD,MACfE,EAASD,OAAOC,OAChBC,EAAiBF,OAAOE,eAIf,SAASC,IACtB,IAAMC,EAAQC,iBAAO,MAkHrB,OAjHAC,oBAAU,WACR,IAGaC,EAHTC,EAAQJ,EAAMK,QAAQC,YACtBC,EAASP,EAAMK,QAAQG,aACvBC,EAASL,EAAQG,EAGfG,EAAQ,IAAIf,EAAMgB,MAClBC,EAAQ,IAAIjB,EAAMkB,MAClBC,EAAS,IAAInB,EAAMoB,kBAAkB,GAAIN,EAAQ,GAAK,KAWtDO,EAAW,IAAIrB,EAAMsB,cAAc,CACvCC,WAAW,EACXC,OAAO,EAGPC,UAAW,QACXC,oBAAoB,EACpBC,uBAAuB,EACvBC,gBAAiB,qBAEnBP,EAASQ,cAAc5B,OAAO6B,kBAE9BT,EAASU,QAAQtB,EAAOG,GAKxB,IAAMoB,EAAW,IAAI7B,EACnBgB,EACAc,SAASC,cAAc,UAEzBF,EAASG,cAAgB,IACzBH,EAASI,cAAgBC,KAAKC,GAAK,EACnCN,EAASO,cAAgBF,KAAKC,GAAK,EACnCN,EAASQ,YAAc,GACvBR,EAASS,YAAc,GACvBT,EAASU,UAAU,EAAG,EAAG,EAAG,GAAK,EAAG,IAAK,GAEzCV,EAASW,OAAON,KAAKC,GAAI,GAAG,GAE5B,IAAIM,EAAY,EACZC,EAAe,OACnBb,EAASc,iBAAiB,aAAc,SAAAC,GACtC,IAAMC,EAAYD,EAAEE,OAAOC,WAAWC,MAEpCN,EADEG,EAAYJ,EACC,OAEA,QAEjBA,EAAYI,IAQd,IAAMI,EAAS,IAAIlD,EAAOmD,MAC1BD,EAAOE,eAAe,KACtBrC,EAAMsC,IAAIH,GACVlD,EAAOsD,OAAOC,WAAa,SAC3BvD,EAAOwD,eAAe,wBAAyB,WAAY,SAAAC,GACzD,IAAIC,EAAWD,EAAKE,WAAWD,SAC3BC,EAAaF,EAAKE,WACtBrD,EAAWoD,EACXA,EAASE,KAAO,GAChBF,EAASG,cAAgB7D,EAAO8D,cAAcC,SAC9CL,EAASM,MAAQhE,EAAOiE,WAAWC,OAGnCP,EAAWQ,SAASC,KAAK,IAAItE,EAAMuE,SAAS,IAAK,IAAK,KACtDnB,EAAOG,IAAIM,KAGb,IAYMW,EAAe,WACnB/D,EAAQJ,EAAMK,QAAQC,YACtBC,EAASP,EAAMK,QAAQG,aACvBC,EAASL,EAAQG,EACjBS,EAASU,QAAQtB,EAAOG,GACxBO,EAAOL,OAASL,EAAQG,EACxBO,EAAOsD,0BAQT,OAJApE,EAAMK,QAAQgE,YAAYrD,EAASsD,YACnC1E,OAAO6C,iBAAiB,SAAU0B,GArBlB,SAAVI,IAEJ,IAAMC,EAAK9D,EAAM+D,WACjB9C,EAAS+C,OAAOF,GAChBxD,EAAS2D,OAAO/D,EAAOE,GACnBX,IAAUA,EAASyE,KAAO,GAC9BjD,EAASW,OAAwB,SAAjBE,EAA0B,MAAU,KAAQ,GAAG,GACrD5C,OAAOiF,sBAAsBN,GAezCA,GAEO,WACL3E,OAAOkF,oBAAoB,SAAUX,KAEtC,IAEDxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,WACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAb,2FAIAH,EAAAC,EAAAC,cAACO,EAAD,CAAYL,KAAK,gCAAgCD,UAAU,aAA3D,4BAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeiG,IAAK/E,KA/HzCF,EAAekF,QAAQ,CAAErF,MAAOA,UCNjB,SAASsF,IACtB,OAAOtG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,6BCDM,SAASoG,IACtB,OAAOvG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACpBH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,+CAAR,gBADF,SAGEJ,EAAAC,EAAAC,cAAA,KAAGE,KAAK,iDAAR,aCyBSoG,MArBf,WASE,OARAjF,oBAAU,WAAM,SAAAkF,IAAA,OAAAA,EAAA5F,OAAA6F,EAAA,EAAA7F,CAAA8F,EAAA1G,EAAA2G,KACd,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAA1G,EAAA8G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACQJ,EAAO,IAAIK,IAAiB,mBADpCH,EAAAE,KAAA,EAEQJ,EAAKM,OAFb,OAGEnE,SAASC,cAAc,SAASmE,MAAMC,QAAU,EAHlD,wBAAAN,EAAAO,SAAAV,OADcW,MAAAC,KAAAC,YAAA,WAAAjB,EAAAe,MAAAC,KAAAC,WAMdC,IACC,IAED3H,EAAAC,EAAAC,cAAC0H,EAAA,SAAD,KACE5H,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAACkB,EAAD,MACApB,EAAAC,EAAAC,cAACoG,EAAD,MACAtG,EAAAC,EAAAC,cAACqG,EAAD,QCbcsB,QACW,cAA7B5G,OAAO6G,SAASC,UAEe,UAA7B9G,OAAO6G,SAASC,UAEhB9G,OAAO6G,SAASC,SAASC,MACvB,2DCbNC,IAASjC,OAAOhG,EAAAC,EAAAC,cAACgI,EAAD,MAASjF,SAASkF,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ef24e3a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mapillary-logo.9a3b3bec.svg\";","import React from 'react';\n\nexport default function Header() {\n  return (\n    <header>\n      <div className=\"header__content\">\n        <nav>\n          <a href=\"https://www.opensfm.org/docs/building.html\">Quickstart</a>\n          <a href=\"https://www.opensfm.org/docs/\">Documentation</a>\n          <a href=\"https://github.com/mapillary/OpenSfM\">\n            <i className=\"icon-github\" />\n            Source code\n          </a>\n        </nav>\n        <div className=\"header__sponsor\">\n          Sponsored by{' '}\n          <a href=\"https://www.mapillary.com\" rel=\"nofollow noopener\">\n            <img\n              src={require('../assets/mapillary-logo.svg')}\n              alt=\"Mapillary\"\n            />\n          </a>\n        </div>\n      </div>\n    </header>\n  );\n}\n","import React from 'react';\n\nexport default function ButtonLink(props) {\n  const { children, href, className, ...rest } = props;\n  return (\n    <a href={href} {...rest} className={className + ' button'}>\n      {children}\n    </a>\n  );\n}\n","import React, { useRef, useEffect } from 'react';\n\nimport ButtonLink from './ButtonLink';\n\nconst THREE = window.THREE;\nconst Potree = window.Potree;\nconst CameraControls = window.CameraControls;\n\nCameraControls.install({ THREE: THREE });\n\nexport default function Hero() {\n  const mount = useRef(null);\n  useEffect(() => {\n    let width = mount.current.clientWidth;\n    let height = mount.current.clientHeight;\n    let aspect = width / height;\n    let frameId, pointMat;\n\n    const clock = new THREE.Clock();\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(90, aspect, 0.1, 1000);\n    // const orthoZoom = 20;\n    // const camera = new THREE.OrthographicCamera(\n    //   -width / orthoZoom,\n    //   width / orthoZoom,\n    //   height / orthoZoom,\n    //   -height / orthoZoom,\n    //   -100,\n    //   1000\n    // );\n    // camera.fov = 70;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true,\n      // logarithmicDepthBuffer: true,\n      // antialias: true,\n      precision: 'highp',\n      premultipliedAlpha: true,\n      preserveDrawingBuffer: false,\n      powerPreference: 'high-performance',\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n\n    renderer.setSize(width, height);\n    // camera.position.z = 10;\n    // camera.position.y = 5;\n    // camera.position.x = 5;\n\n    const controls = new CameraControls(\n      camera,\n      document.querySelector('.hero')\n    );\n    controls.dampingFactor = 0.03;\n    controls.minPolarAngle = Math.PI / 2;\n    controls.maxPolarAngle = Math.PI / 2;\n    controls.minDistance = 0.1;\n    controls.maxDistance = 0.1;\n    controls.setLookAt(0, 1, 0, 0.1, 1, 0.1, false);\n    // controls.truck(0, -2.5, true);\n    controls.rotate(Math.PI, 0, true);\n\n    let prevTheta = 0;\n    let panDirection = 'left';\n    controls.addEventListener('controlend', e => {\n      const nextTheta = e.target._spherical.theta;\n      if (nextTheta > prevTheta) {\n        panDirection = 'left';\n      } else {\n        panDirection = 'right';\n      }\n      prevTheta = nextTheta;\n    });\n\n    // Setup debug\n    // scene.add(new THREE.AmbientLight(0x404040));\n    // scene.add(new THREE.AxesHelper(1000));\n\n    // Potree\n    const points = new Potree.Group();\n    points.setPointBudget(1000000);\n    scene.add(points);\n    Potree.Global.workerPath = 'source';\n    Potree.loadPointCloud('data/levels3/cloud.js', 'filtered', data => {\n      let material = data.pointcloud.material;\n      let pointcloud = data.pointcloud;\n      pointMat = material;\n      material.size = 0.5;\n      material.pointSizeType = Potree.PointSizeType.ADAPTIVE;\n      material.shape = Potree.PointShape.SQUARE;\n\n      // pointcloud.position.copy(new THREE.Vector3(-1.5, -2.3, 1));\n      pointcloud.position.copy(new THREE.Vector3(-50, -50, -12));\n      points.add(pointcloud);\n    });\n\n    const renderScene = () => {};\n\n    const animate = () => {\n      // renderScene();\n      const dt = clock.getDelta();\n      controls.update(dt);\n      renderer.render(scene, camera);\n      if (pointMat) pointMat.time = 1;\n      controls.rotate(panDirection === 'left' ? 0.0005 : -0.0005, 0, true);\n      frameId = window.requestAnimationFrame(animate);\n    };\n\n    const handleResize = () => {\n      width = mount.current.clientWidth;\n      height = mount.current.clientHeight;\n      aspect = width / height;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      // renderScene();\n    };\n\n    mount.current.appendChild(renderer.domElement);\n    window.addEventListener('resize', handleResize);\n    animate();\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return (\n    <div className=\"hero\">\n      <h1 className=\"hero__title\">OpenSfM</h1>\n      <p className=\"hero__desc\">\n        An open-source Structure from Motion library that lets you build 3D\n        models from images.\n      </p>\n      <ButtonLink href=\"https://www.opensfm.org/docs/\" className=\"hero__cta\">\n        Get started with OpenSfM\n      </ButtonLink>\n      <div className=\"hero__visual\" ref={mount} />\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function Attribution() {\n  return <div className=\"attribution\">Images provided by Vexcel</div>;\n}\n","import React from 'react';\n\nexport default function Terms() {\n  return <div className=\"terms\">\n    <p>\n      <a href=\"https://opensource.facebook.com/legal/terms\">Terms of Use</a>\n      &emsp;\n      <a href=\"https://opensource.facebook.com/legal/privacy\">Privacy</a>\n    </p>\n  </div>;\n}\n","import React, { useEffect, useState, Fragment } from 'react';\nimport FontFaceObserver from 'fontfaceobserver';\n\nimport Header from './components/Header';\nimport Hero from './components/Hero';\nimport Visualize from './components/Visualize';\nimport Footer from './components/Footer';\nimport './styles/index.scss';\nimport Attribution from './components/Attribution';\nimport Terms from './components/Terms';\n\nfunction App() {\n  useEffect(() => {\n    async function onLoad() {\n      const font = new FontFaceObserver('Source Sans Pro');\n      await font.load();\n      document.querySelector('#root').style.opacity = 1;\n    }\n    onLoad();\n  }, []);\n  return (\n    <Fragment>\n      <Header />\n      <Hero />\n      <Attribution />\n      <Terms />\n      {/* <Visualize /> */}\n      {/* <Footer /> */}\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}